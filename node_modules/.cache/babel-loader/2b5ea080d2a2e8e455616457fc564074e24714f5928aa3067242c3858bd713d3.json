{"ast":null,"code":"var _jsxFileName = \"/Users/aminerebbouh/Desktop/react-app/src/Line/Line.jsx\";\nimport React, { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Line(params) {\n  setTimeout(() => {\n    const observer = new IntersectionObserver(entries => {\n      console.log(entries);\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.className = \"sline\";\n        } else {\n          entry.target.className = \"hline\";\n        }\n      });\n    });\n    const blogs = document.getElementsByClassName(\"hline\");\n    console.log(blogs);\n    observer.observe(blogs);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"line\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c = Line;\nexport default Line;\nvar _c;\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"names":["React","Fragment","Line","params","setTimeout","observer","IntersectionObserver","entries","console","log","forEach","entry","isIntersecting","target","className","blogs","document","getElementsByClassName","observe"],"sources":["/Users/aminerebbouh/Desktop/react-app/src/Line/Line.jsx"],"sourcesContent":["import React, { Fragment } from 'react';\nfunction Line(params) {\n\n    setTimeout(() => {\n        const observer = new IntersectionObserver(entries => {\n            console.log(entries);\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    entry.target.className=\"sline\";\n                } else {\n                    entry.target.className=\"hline\";\n                }\n              })\n          })\n          \n          const blogs = document.getElementsByClassName(\"hline\");\n          console.log(blogs);\n          \n         observer.observe(blogs);\n        });\n    \n    return(\n        <Fragment>\n            <div id='line'>\n                <div className='hline'></div>\n            </div>\n        </Fragment>\n    );\n}export default Line;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AACxC,SAASC,IAAI,CAACC,MAAM,EAAE;EAElBC,UAAU,CAAC,MAAM;IACb,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAACC,OAAO,IAAI;MACjDC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACpBA,OAAO,CAACG,OAAO,CAACC,KAAK,IAAI;QACrB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACtBD,KAAK,CAACE,MAAM,CAACC,SAAS,GAAC,OAAO;QAClC,CAAC,MAAM;UACHH,KAAK,CAACE,MAAM,CAACC,SAAS,GAAC,OAAO;QAClC;MACF,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,OAAO,CAAC;IACtDT,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IAEnBV,QAAQ,CAACa,OAAO,CAACH,KAAK,CAAC;EACxB,CAAC,CAAC;EAEN,oBACI,QAAC,QAAQ;IAAA,uBACL;MAAK,EAAE,EAAC,MAAM;MAAA,uBACV;QAAK,SAAS,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA;EAC3B;IAAA;IAAA;IAAA;EAAA,QACC;AAEnB;AAAC,KA3BQb,IAAI;AA2BZ,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}